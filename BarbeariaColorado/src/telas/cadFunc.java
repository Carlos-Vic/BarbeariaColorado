/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;
import classes.Funcionario;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Carlos
 */
public class CadastroFuncionario extends javax.swing.JFrame {
    ArrayList<Funcionario> Funcionarios = new ArrayList<>();
    private javax.swing.table.DefaultTableModel modeloTabela;
    public CadastroFuncionario() {
        initComponents();
        modeloTabela = new DefaultTableModel(
        new Object[]{"Nome", "CPF", "Email", "Endereço", "Celular", "Cargo", "Senha"}, 
        0 // Indica que a tabela começa com 0 linhas
    );
        tabelaFuncionarios.setModel(modeloTabela);
        tabelaFuncionarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        botaoVoltar = new javax.swing.JButton();
        campoNome = new javax.swing.JTextField();
        campoCpf = new javax.swing.JTextField();
        botaoBuscar = new javax.swing.JButton();
        campoEmail = new javax.swing.JTextField();
        campoEndereco = new javax.swing.JTextField();
        campoCelular = new javax.swing.JTextField();
        campoCargo = new javax.swing.JTextField();
        campoSenha = new javax.swing.JTextField();
        botaoNovo = new javax.swing.JButton();
        botaoAlterar = new javax.swing.JButton();
        botaoPesquisar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionarios = new javax.swing.JTable();
        cadastroFuncionario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botaoVoltar.setBackground(new java.awt.Color(57, 62, 70));
        botaoVoltar.setBorder(null);
        botaoVoltar.setBorderPainted(false);
        botaoVoltar.setContentAreaFilled(false);
        botaoVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        campoNome.setBackground(new java.awt.Color(238, 238, 238));
        campoNome.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoNome.setForeground(new java.awt.Color(57, 62, 70));
        campoNome.setBorder(null);
        getContentPane().add(campoNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 290, 30));

        campoCpf.setBackground(new java.awt.Color(238, 238, 238));
        campoCpf.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoCpf.setForeground(new java.awt.Color(57, 62, 70));
        campoCpf.setBorder(null);
        campoCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCpfActionPerformed(evt);
            }
        });
        getContentPane().add(campoCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 290, 30));

        botaoBuscar.setBorder(null);
        botaoBuscar.setBorderPainted(false);
        botaoBuscar.setContentAreaFilled(false);
        botaoBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 70, 30));

        campoEmail.setBackground(new java.awt.Color(238, 238, 238));
        campoEmail.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoEmail.setForeground(new java.awt.Color(57, 62, 70));
        campoEmail.setBorder(null);
        getContentPane().add(campoEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 290, 30));

        campoEndereco.setBackground(new java.awt.Color(238, 238, 238));
        campoEndereco.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoEndereco.setForeground(new java.awt.Color(57, 62, 70));
        campoEndereco.setBorder(null);
        getContentPane().add(campoEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 290, 30));

        campoCelular.setBackground(new java.awt.Color(238, 238, 238));
        campoCelular.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoCelular.setForeground(new java.awt.Color(57, 62, 70));
        campoCelular.setBorder(null);
        getContentPane().add(campoCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 290, 30));

        campoCargo.setBackground(new java.awt.Color(238, 238, 238));
        campoCargo.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoCargo.setForeground(new java.awt.Color(57, 62, 70));
        campoCargo.setBorder(null);
        campoCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCargoActionPerformed(evt);
            }
        });
        getContentPane().add(campoCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 290, 30));

        campoSenha.setBackground(new java.awt.Color(238, 238, 238));
        campoSenha.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        campoSenha.setForeground(new java.awt.Color(57, 62, 70));
        campoSenha.setBorder(null);
        getContentPane().add(campoSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, 290, 30));

        botaoNovo.setBorder(null);
        botaoNovo.setBorderPainted(false);
        botaoNovo.setContentAreaFilled(false);
        botaoNovo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovoActionPerformed(evt);
            }
        });
        getContentPane().add(botaoNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 650, 140, 30));

        botaoAlterar.setBorder(null);
        botaoAlterar.setBorderPainted(false);
        botaoAlterar.setContentAreaFilled(false);
        botaoAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 650, 140, 30));

        botaoPesquisar.setBorder(null);
        botaoPesquisar.setBorderPainted(false);
        botaoPesquisar.setContentAreaFilled(false);
        botaoPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 650, 150, 30));

        botaoExcluir.setBorder(null);
        botaoExcluir.setBorderPainted(false);
        botaoExcluir.setContentAreaFilled(false);
        botaoExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(botaoExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 650, 150, 30));

        botaoSalvar.setBorder(null);
        botaoSalvar.setBorderPainted(false);
        botaoSalvar.setContentAreaFilled(false);
        botaoSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 650, 140, 30));

        tabelaFuncionarios.setBackground(new java.awt.Color(238, 238, 238));
        tabelaFuncionarios.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        tabelaFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Email", "Endereço", "Celular", "Cargo", "Senha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaFuncionarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaFuncionarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabelaFuncionarios);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 750, 560));

        cadastroFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tela_cadastro_funcionarios.png"))); // NOI18N
        getContentPane().add(cadastroFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(1220, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>                        
    
    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        MenuGerente menuGerente = new MenuGerente();
        menuGerente.setVisible(true);
        this.dispose();
    }                                           

    private void campoCpfActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void campoCargoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void botaoNovoActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        Funcionario f1 = new Funcionario(campoNome.getText(), campoCpf.getText(), campoEmail.getText(), campoEndereco.getText(), campoCelular.getText(), campoCargo.getText(), campoSenha.getText());
        System.out.println("funcionario cadastrado " + f1.getNome());
        modeloTabela.addRow(new Object[]{
        f1.getNome(),
        f1.getCPF(),
        f1.getEmail(),
        f1.getEndereco(),
        f1.getCelular(),
        f1.getCargo(),
        f1.getSenha()
    });
        Funcionarios.add(f1); 
        limparCampos();                       
    }                                         

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        MenuGerente menuGerente = new MenuGerente();
        menuGerente.setVisible(true);
        this.dispose();
    }                                           

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int selectedRow = tabelaFuncionarios.getSelectedRow();
        System.out.println("Linha selecionada: " + selectedRow);
        System.out.println("Total de funcionários na lista: " + Funcionarios.size());
        System.out.println("Total de linhas na tabela: " + modeloTabela.getRowCount());
        
        if (selectedRow >= 0 && selectedRow < Funcionarios.size()) {
            // Remover a linha da tabela primeiro
            modeloTabela.removeRow(selectedRow);
            Funcionarios.remove(selectedRow);
            System.out.println("Funcionário excluído com sucesso.");
        } else {
            System.out.println("Selecione um funcionário válido para excluir.");
        }
    }                                            

    private void botaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int selectedRow = tabelaFuncionarios.getSelectedRow(); // Obtém a linha selecionada

        if (selectedRow >= 0 && selectedRow < Funcionarios.size()) {
            Funcionario funcionario = Funcionarios.get(selectedRow);

            // Verifica o campo a ser alterado e muda
            if (!campoNome.getText().isEmpty() && !campoNome.getText().equals(funcionario.getNome())) {
                funcionario.setNome(campoNome.getText());
                modeloTabela.setValueAt(funcionario.getNome(), selectedRow, 0);  // Atualiza o nome na tabela
                System.out.println("Nome alterado com sucesso");
                limparCampos();
            }
            if (!campoCpf.getText().isEmpty() && !campoCpf.getText().equals(funcionario.getCPF())) {
                funcionario.setCPF(campoCpf.getText());
                modeloTabela.setValueAt(funcionario.getCPF(), selectedRow, 1);  // Atualiza o CPF na tabela
                System.out.println("CPF alterado com sucesso");
                limparCampos();
            }
            if (!campoEmail.getText().isEmpty() && !campoEmail.getText().equals(funcionario.getEmail())) {
                funcionario.setEmail(campoEmail.getText());
                modeloTabela.setValueAt(funcionario.getEmail(), selectedRow, 2);  // Atualiza o email na tabela
                System.out.println("Email alterado com sucesso");
                limparCampos();
            }
            if (!campoEndereco.getText().isEmpty() && !campoEndereco.getText().equals(funcionario.getEndereco())) {
                funcionario.setEndereco(campoEndereco.getText());
                modeloTabela.setValueAt(funcionario.getEndereco(), selectedRow, 3);  // Atualiza o endereço na tabela
                System.out.println("Endereço alterado com sucesso");
                limparCampos();
            }
            if (!campoCelular.getText().isEmpty() && !campoCelular.getText().equals(funcionario.getCelular())) {
                funcionario.setCelular(campoCelular.getText());
                modeloTabela.setValueAt(funcionario.getCelular(), selectedRow, 4);  // Atualiza o celular na tabela
                System.out.println("Celular alterado com sucesso");
                limparCampos();
            }
            if (!campoCargo.getText().isEmpty() && !campoCargo.getText().equals(funcionario.getCargo())) {
                funcionario.setCargo(campoCargo.getText());
                modeloTabela.setValueAt(funcionario.getCargo(), selectedRow, 5);  // Atualiza o cargo na tabela
                System.out.println("Cargo alterado com sucesso");
                limparCampos();
            }
            if (!campoSenha.getText().isEmpty() && !campoSenha.getText().equals(funcionario.getSenha())) {
                funcionario.setSenha(campoSenha.getText());
                modeloTabela.setValueAt(funcionario.getSenha(), selectedRow, 6);  // Atualiza a senha na tabela
                System.out.println("Senha alterada com sucesso");
                limparCampos();
            }
            // Atualiza o objeto na lista
            Funcionarios.set(selectedRow, funcionario);
            // atulizar tabela
            modeloTabela.fireTableDataChanged();

            System.out.println("Todos os dados foram atualizados com sucesso!");

        } else {
            System.out.println("Selecione um funcionário válido para atualizar.");
        }
    }                                            

    private void botaoBuscarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        String cpfBuscado = campoCpf.getText();
        if(cpfBuscado.isEmpty()) {
            System.out.println("Digite um CPF");
        }
        for (Funcionario funcionario : Funcionarios) {
            if(funcionario.getCPF().equals(cpfBuscado)){
                System.out.println(funcionario);
                limparCampos();
                break;
            } else {
                System.out.println("Não existe funcionário com o CPF: " + cpfBuscado);
                limparCampos();
            }           
        }                
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton botaoAlterar;
    private javax.swing.JButton botaoBuscar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoNovo;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JLabel cadastroFuncionario;
    private javax.swing.JTextField campoCargo;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoCpf;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoEndereco;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoSenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaFuncionarios;
    // End of variables declaration                   

    private void limparCampos() {
    campoNome.setText("");
    campoCpf.setText("");
    campoEmail.setText("");
    campoEndereco.setText("");
    campoCelular.setText("");
    campoCargo.setText("");
    campoSenha.setText("");
    }
    
}
